name: Build grassh

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Install yq
        run: curl.exe -o C:\Windows\System32\yq.exe -L https://github.com/mikefarah/yq/releases/latest/download/yq_windows_amd64.exe
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - run: flutter build windows --build-number=${{ github.run_number }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grassh-windows
          path: build\windows\x64\runner\Release

  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter build linux --build-number=${{ github.run_number }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grassh-linux
          path: build/linux/x64/release/bundle/
      
  linux-arm64:
    runs-on: ubuntu-22.04
    name: linux arm64
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu22.04
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          shell: /bin/bash
          install: |
            apt-get update
            apt-get install -y tar unzip xz-utils wget curl git ninja-build libgtk-3-dev make cmake clang
          run: |
            git clone https://github.com/yuanzui-cf/grassh
            cd grassh
            wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_arm64 -O /usr/bin/yq
            chmod +x /usr/bin/yq
            wget https://github.com/containerbase/flutter-prebuild/releases/latest/download/version
            VERSION=$(cat version)
            wget https://github.com/containerbase/flutter-prebuild/releases/latest/download/flutter-$VERSION-aarch64.tar.xz
            mkdir /opt/flutter
            tar -xvJf flutter-$VERSION-aarch64.tar.xz -C /opt/flutter
            chmod +x /opt/flutter/$VERSION/bin/flutter
            chmod +x /opt/flutter/$VERSION/bin/dart
            ln -s /opt/flutter/$VERSION/bin/flutter /usr/bin/flutter
            ln -s /opt/flutter/$VERSION/bin/dart /usr/bin/dart
            yq eval '.environment.flutter' pubspec.yaml
            flutter build linux --build-number=${{ github.run_number }}
            cp -r build/linux/arm64/release/bundle/* /artifacts/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grassh-linux-arm64
          path: "${PWD}/artifacts/"


  macos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      - run: flutter build macos --build-number=${{ github.run_number }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: grassh-macos
          path: build/macos/Build/Products/Release/
